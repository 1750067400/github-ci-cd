name: CI/CD Workflow

on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+'
    paths-ignore:
      - '#NORUN*'

jobs:
  scan-job:
    runs-on: ubuntu-20.04
    outputs:
      severity: ${{ steps.set-severity.outputs.severity }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run Trivy vulnerability scanner in IaC mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        hide-progress: false
        format: 'sarif'
        output: 'trivy-results.sarif'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

    - name: Parse Trivy SARIF results and set severity
      run: |
       if grep -q "\"level\": \"error\"" trivy-results.sarif; then
           echo "CRITICAL" > severity.txt
       else
           echo "HIGH" > severity.txt
       fi


    - name: Upload severity
      uses: actions/upload-artifact@v2
      with:
        name: severity
        path: severity.txt



  job1:
    needs: scan-job
    runs-on: ubuntu-20.04
    steps:
    - name: Download severity
      uses: actions/download-artifact@v2
      with:
        name: severity

    - name: Check severity
      id: check-severity
      run: |
        if grep -q "CRITICAL" severity.txt; then
            echo "Running job1 because severity is CRITICAL"
        else
            exit 1
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: barry126/app:latest

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.1.1
      with:
        cosign-release: 'v2.1.1'

    - name: Check install!
      run: cosign version

    - name: Sign image with a key
      run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
      env:
        TAGS: ${{ steps.docker_meta.outputs.tags }}
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}

    - name: Send the notification
      uses: rtCamp/action-slack-notify@v2
      env:
          SLACK_TITLE: "Image build and signed"
          SLACK_MESSAGE: |
            Name: # LI CHONGYANG
            Matriculation: # A0285887B
            Email: # e1221699@u.nus.edu
            GitHub: Your GitHub repo link
            Docker: Your dockerhub image link
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

  job2:
    needs: scan-job
    runs-on: ubuntu-20.04
    steps:
    - name: Download severity
      uses: actions/download-artifact@v2
      with:
        name: severity

    - name: Check severity
      id: check-severity
      run: |
        if grep -q "HIGH" severity.txt; then
            echo "Running job2 because severity is HIGH"
        else
            exit 1
        fi

   
    - name: Send the notification
      uses: rtCamp/action-slack-notify@v2
      env:
          SLACK_COLOR: '#FF0000'
          SLACK_TITLE: "Scan failed - # LI CHONGYANG"
          SLACK_MESSAGE: |
            Failed trivy scan, see uploaded report
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      
